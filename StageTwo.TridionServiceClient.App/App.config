<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <appSettings>
    <!-- Required -->
    <!--<add key="CoreService.EndPoint" value="wsHttp_2013" />-->
    <add key="CoreService.EndPoint" value="basicHttp_2013" />
    <!--<add key="CoreService.EndPoint" value="netTcp_2013" />-->
    
    <!-- Optional -->
    <add key="CoreService.Username" value="DOMAIN\Username" />
    <add key="CoreService.Password" value="password" />
  </appSettings>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
    </startup>
  <system.serviceModel>
    <!-- Default/example WCF settings for Core Service. These settings should be copied into the host application's configuration file. -->
    <bindings>
      <!-- Default Core Service binding settings are provided here. These can be used as a starting point for further customizations. -->
      <basicHttpBinding>
        <binding name="basicHttp" maxReceivedMessageSize="10485760">
          <readerQuotas maxStringContentLength="10485760" maxArrayLength="10485760" />
          <security mode="TransportCredentialOnly">
            <!-- For LDAP or SSO authentication of transport credentials, use clientCredentialType="Basic" -->
            <transport clientCredentialType="Windows" />
          </security>
        </binding>
      </basicHttpBinding>
      <wsHttpBinding>
        <binding name="wsHttp" transactionFlow="true" maxReceivedMessageSize="10485760">
          <readerQuotas maxStringContentLength="10485760" maxArrayLength="10485760" />
          <security>
            <message establishSecurityContext="true" />
          </security>
          <!--<reliableSession enabled="true" />-->
        </binding>
      </wsHttpBinding>
      <netTcpBinding>
        <binding name="netTcp" transactionFlow="true" transactionProtocol="OleTransactions" maxReceivedMessageSize="10485760">
          <readerQuotas maxStringContentLength="10485760" maxArrayLength="10485760" />
        </binding>
      </netTcpBinding>
      <!-- Default binding settings for SAML compliant federated authentication -->
    </bindings>
    <client>
      <!-- 
      Default Core Service endpoint settings are provided here. The endpoint name should be specified when constructing a proxy service instance.
      The mapping between proxy service types and applicable endpoint names is as follows (see also the contracts specified on each endpoint):
      CoreServiceClient: basicHttp
      SessionAwareCoreServiceClient: wsHttp, netTcp
      StreamDownloadClient: streamDownload_basicHttp, streamDownload_netTcp
      StreamUploadClient: streamUpload_basicHttp, streamUpload_netTcp
      -->
      <endpoint name="basicHttp_2013" address="http://localhost/webservices/CoreService2013.svc/basicHttp" binding="basicHttpBinding" bindingConfiguration="basicHttp" contract="Tridion.ContentManager.CoreService.Client.ICoreService" />
      <endpoint name="wsHttp_2013" address="http://localhost/webservices/CoreService2013.svc/wsHttp" binding="wsHttpBinding" bindingConfiguration="wsHttp" contract="Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService">
        <identity>
          <dns value="localhost" />
        </identity>
      </endpoint>
      <endpoint name="netTcp_2013" address="net.tcp://localhost:2660/CoreService/2013/netTcp" binding="netTcpBinding" bindingConfiguration="netTcp" contract="Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService" />
    </client>
    <!-- 
    Use these behavior settings for SAML compliant federated authentication. 
    Configure the clientCertificate and serviceCertificate - adjust the store locations, store names and subject names for your certificates.
    Client certificate is used to issue SAML tokens, and service certificate represents the target CoreService host.

    <behaviors>
      <endpointBehaviors>
        <behavior>
          <clientCredentials type="Tridion.ContentManager.CoreService.Client.Security.ClaimsClientCredentials, Tridion.ContentManager.CoreService.Client" supportInteractive="false">
            <clientCertificate storeLocation="LocalMachine" storeName="My" x509FindType="FindBySubjectName" findValue="SamlTokenIssuer" />
            <serviceCertificate>
              <defaultCertificate storeLocation="LocalMachine" storeName="TrustedPeople" x509FindType="FindBySubjectName" findValue="localhost" />
            </serviceCertificate>
          </clientCredentials>
        </behavior>
      </endpointBehaviors>
    </behaviors>
    -->
  </system.serviceModel>

</configuration>